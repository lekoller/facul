DROP TABLE IF EXISTS T_SGV_CATEGORIA CASCADE;
DROP TABLE IF EXISTS T_SGV_CHAMADO CASCADE;
DROP TABLE IF EXISTS T_SGV_CLASSIFICACAO CASCADE;
DROP TABLE IF EXISTS T_SGV_CLIENTE CASCADE;
DROP TABLE IF EXISTS T_SGV_FUNCIONARIO CASCADE;
DROP TABLE IF EXISTS T_SGV_PESSOA_JURIDICA CASCADE;
DROP TABLE IF EXISTS T_SGV_PRODUTO CASCADE;
DROP TABLE IF EXISTS T_SGV_VENDA CASCADE;
DROP TABLE IF EXISTS T_SGV_VENDA_PRODUTO CASCADE;
DROP TABLE IF EXISTS T_SGV_VIDEO CASCADE;
DROP TABLE IF EXISTS T_SGV_VISUALIZACAO CASCADE;
DROP TABLE IF EXISTS T_SGV_PESSOA_FISICA CASCADE;
DROP FUNCTION IF EXISTS check_t_sgv_video_st;
DROP FUNCTION IF EXISTS calculate_duration;


CREATE TABLE T_SGV_CATEGORIA
  (
    id_categoria INTEGER NOT NULL,
    ds_categoria VARCHAR (255) NOT NULL,
    st_categoria CHAR (1) NOT NULL,
    dt_inicio    DATE NOT NULL DEFAULT NOW(),
    dt_termino   DATE
  );

ALTER TABLE T_SGV_CATEGORIA ADD CONSTRAINT CK_SGV_CATEGORIA_ST CHECK (ST_CATEGORIA = 'A' OR ST_CATEGORIA = 'I');
ALTER TABLE T_SGV_CATEGORIA ADD CONSTRAINT PK_SGV_CATEGORIA PRIMARY KEY ( id_categoria );
ALTER TABLE T_SGV_CATEGORIA ADD CONSTRAINT UN_SGV_CATEGORIA_DESC UNIQUE ( ds_categoria );


CREATE TABLE T_SGV_CHAMADO
  (
    cd_cliente     VARCHAR (128) NOT NULL,
    id_produto     INTEGER NOT NULL,
    id_chamado     BIGINT NOT NULL,
    cd_funcionario INTEGER,
    cd_tipo        INTEGER NOT NULL,
    st_chamado     CHAR (1) NOT NULL DEFAULT 'A',
    tx_chamado     VARCHAR (4000) NOT NULL,
    dt_abertura    TIMESTAMP NOT NULL DEFAULT NOW(),
    dt_atendimento DATE,
    dt_fechamento  DATE,
    vl_satisfacao  INTEGER,
    vl_duracao_h   INTEGER
  );

ALTER TABLE T_SGV_CHAMADO ADD CONSTRAINT CK_SGV_CHAM_ST CHECK (ST_CHAMADO           = 'A' OR ST_CHAMADO = 'E' OR ST_CHAMADO = 'C' OR ST_CHAMADO = 'F' OR ST_CHAMADO = 'X');
ALTER TABLE T_SGV_CHAMADO ADD CONSTRAINT CK_SGV_CHAM_VL_SATSF CHECK (VL_SATISFACAO >= 1 AND VL_SATISFACAO <= 10);
ALTER TABLE T_SGV_CHAMADO ADD CONSTRAINT CK_SGV_CHAMA_CD_TIPO CHECK (CD_TIPO        = 1 OR CD_TIPO = 2);
ALTER TABLE T_SGV_CHAMADO ADD CONSTRAINT PK_SGV_CHAMADO PRIMARY KEY ( id_chamado, id_produto, cd_cliente );


CREATE TABLE T_SGV_CLASSIFICACAO
  (
    id_classificacao INTEGER NOT NULL,
    ds_classificacao VARCHAR (255) NOT NULL
  );

ALTER TABLE T_SGV_CLASSIFICACAO ADD CONSTRAINT PK_SGV_CLASSIFICACAO PRIMARY KEY ( id_classificacao );
ALTER TABLE T_SGV_CLASSIFICACAO ADD CONSTRAINT UN_SGV_CLASS_DS UNIQUE ( ds_classificacao );


CREATE TABLE T_SGV_CLIENTE
  (
    cd_cliente  VARCHAR(128) NOT NULL,
    nm_cliente  VARCHAR(255) NOT NULL,
    st_cliente  CHAR(1) NOT NULL,
    vl_login    VARCHAR(255) NOT NULL,
    vl_senha    VARCHAR(128) NOT NULL,
    qt_estrelas SMALLINT,
    nr_ddd      NUMERIC(2),
    nr_telefone NUMERIC(9)
  );

ALTER TABLE T_SGV_CLIENTE ADD CONSTRAINT PK_SGV_CLIENTE PRIMARY KEY ( cd_cliente );
ALTER TABLE T_SGV_CLIENTE ADD CONSTRAINT CK_SGV_CLIENTE_ST CHECK (ST_CLIENTE = 'A' OR ST_CLIENTE = 'I');

CREATE TABLE T_SGV_FUNCIONARIO
  (
    cd_funcionario  INTEGER NOT NULL,
    nm_funcionario  VARCHAR (255) NOT NULL,
    cd_cpf          BIGINT NOT NULL,
    dt_nascimento   DATE NOT NULL,
    nr_ddd          NUMERIC(2) NOT NULL,
    nr_telefone     NUMERIC(9) NOT NULL,
    vl_email        VARCHAR (255) NOT NULL,
    nm_cargo        VARCHAR (255) NOT NULL,
    nm_departamento VARCHAR (255) NOT NULL
  );

ALTER TABLE T_SGV_FUNCIONARIO ADD CONSTRAINT PK_SGV_FUNCIONARIO PRIMARY KEY ( cd_funcionario );
ALTER TABLE T_SGV_FUNCIONARIO ADD CONSTRAINT UN_SGV_FUNC_CPF UNIQUE ( cd_cpf );


CREATE TABLE T_SGV_PESSOA_FISICA
  (
    cd_cliente    VARCHAR (128) NOT NULL,
    id_pf         INTEGER NOT NULL,
    nm_cpf        NUMERIC NOT NULL,
    dt_nascimento DATE NOT NULL,
    cd_sexo       CHAR (1) NOT NULL,
    vl_genero     VARCHAR (255)
  );
  
CREATE UNIQUE INDEX T_SGV_PESSOA_FISICA__IDX ON T_SGV_PESSOA_FISICA
  (
    cd_cliente ASC
  );
  
ALTER TABLE T_SGV_PESSOA_FISICA ADD CONSTRAINT CK_SVG_PF_SEXO CHECK (CD_SEXO = 'M' OR CD_SEXO = 'F');
ALTER TABLE T_SGV_PESSOA_FISICA ADD CONSTRAINT PK_SVG_PESSOA_FISICA PRIMARY KEY ( id_pf, cd_cliente );


CREATE TABLE T_SGV_PESSOA_JURIDICA
  (
    cd_cliente   VARCHAR(128) NOT NULL,
    id_pj        INTEGER NOT NULL,
    cd_cnpj      NUMERIC(14),
    cd_inscr_est VARCHAR(32),
    dt_fundacao  DATE
  );

CREATE UNIQUE INDEX T_SGV_PESSOA_JURIDICA__IDX ON T_SGV_PESSOA_JURIDICA
  (
    cd_cliente ASC
  );

ALTER TABLE T_SGV_PESSOA_JURIDICA ADD CONSTRAINT PK_SGV_PESSOA_JURIDICA PRIMARY KEY ( id_pj, cd_cliente );


CREATE TABLE T_SGV_PRODUTO
  (
    id_produto   INTEGER NOT NULL,
    id_categoria INTEGER,
    nm_produto   VARCHAR (255) NOT NULL,
    ds_normal    VARCHAR (255) NOT NULL,
    ds_completa  VARCHAR (4000) NOT NULL,
    vl_preco_unit NUMERIC (6,2) NOT NULL,
    st_produto CHAR (1) NOT NULL,
    cd_ean13   VARCHAR (13)
  );

ALTER TABLE T_SGV_PRODUTO ADD CONSTRAINT CK_SGV_PROD_ST CHECK (ST_PRODUTO = 'A' OR ST_PRODUTO = 'I');
ALTER TABLE T_SGV_PRODUTO ADD CONSTRAINT PK_SGV_PRODUTO PRIMARY KEY ( id_produto );
ALTER TABLE T_SGV_PRODUTO ADD CONSTRAINT UN_SGV_PROD_DESC UNIQUE ( ds_normal );


CREATE TABLE T_SGV_VENDA
  (
    cd_cliente VARCHAR (128) NOT NULL,
    id_venda   INTEGER NOT NULL,
    vl_montante NUMERIC NOT NULL,
    st_venda        CHAR (1) NOT NULL DEFAULT 'A',
    cd_metodo_pagto CHAR (1) NOT NULL,
    dt_abertura     DATE NOT NULL DEFAULT NOW(),
    dt_pagamento    DATE,
    dt_entrega      DATE,
    dt_cancelamento DATE,
    cd_nota_fiscal  VARCHAR (255),
    nr_parcelas     INTEGER
  );

ALTER TABLE T_SGV_VENDA ADD CONSTRAINT CK_SGV_VENDA_ST CHECK (ST_VENDA IN ('A', 'P', 'E', 'C'));
ALTER TABLE T_SGV_VENDA ADD CONSTRAINT CK_SGV_VENDA_M_PAGTO CHECK (CD_METODO_PAGTO IN ('V', 'P', 'X', 'B'));
ALTER TABLE T_SGV_VENDA ADD CONSTRAINT PK_SGV_VENDA PRIMARY KEY ( id_venda, cd_cliente );


CREATE TABLE T_SGV_VENDA_PRODUTO
  (
    cd_cliente       VARCHAR (128) NOT NULL,
    id_venda         INTEGER NOT NULL,
    id_produto       INTEGER NOT NULL,
    cd_venda_produto VARCHAR (128) NOT NULL,
    qt_produto       INTEGER NOT NULL
  );
  
ALTER TABLE T_SGV_VENDA_PRODUTO ADD CONSTRAINT PK_SGV_VENDA_PRODUTO PRIMARY KEY ( cd_venda_produto, id_venda, cd_cliente, id_produto );


CREATE TABLE T_SGV_VIDEO
  (
    id_produto       INTEGER NOT NULL,
    id_video         INTEGER NOT NULL,
    id_classificacao INTEGER NOT NULL,
    st_video         CHAR (1) NOT NULL,
    vl_video BYTEA
  );
  
ALTER TABLE T_SGV_VIDEO ADD CONSTRAINT CK_SGV_VIDEO_ST CHECK (ST_VIDEO = 'A' OR ST_VIDEO = 'I');
ALTER TABLE T_SGV_VIDEO ADD CONSTRAINT PK_SGV_VIDEO PRIMARY KEY ( id_video, id_produto );


CREATE TABLE T_SGV_VISUALIZACAO
  (
    id_produto      INTEGER NOT NULL,
    id_video        INTEGER NOT NULL,
    id_visualizacao INTEGER NOT NULL,
    dt_visualizacao TIMESTAMP NOT NULL DEFAULT NOW(),
    cd_cliente      VARCHAR (128)
  );
  
ALTER TABLE T_SGV_VISUALIZACAO ADD CONSTRAINT PK_SGV_VISUALIZACAO PRIMARY KEY ( id_visualizacao, id_produto, id_video );


ALTER TABLE T_SGV_CHAMADO ADD CONSTRAINT FK_SGV_CHAM_CLIENTE FOREIGN KEY ( cd_cliente ) REFERENCES T_SGV_CLIENTE ( cd_cliente );
ALTER TABLE T_SGV_CHAMADO ADD CONSTRAINT FK_SGV_CHAM_FUNC FOREIGN KEY ( cd_funcionario ) REFERENCES T_SGV_FUNCIONARIO ( cd_funcionario );
ALTER TABLE T_SGV_CHAMADO ADD CONSTRAINT FK_SGV_CHAM_PROD FOREIGN KEY ( id_produto ) REFERENCES T_SGV_PRODUTO ( id_produto );
ALTER TABLE T_SGV_PESSOA_JURIDICA ADD CONSTRAINT FK_SGV_PJ_CLIENTE FOREIGN KEY ( cd_cliente ) REFERENCES T_SGV_CLIENTE ( cd_cliente );
ALTER TABLE T_SGV_PRODUTO ADD CONSTRAINT FK_SGV_PROD_CATEG FOREIGN KEY ( id_categoria ) REFERENCES T_SGV_CATEGORIA ( id_categoria );
ALTER TABLE T_SGV_VENDA_PRODUTO ADD CONSTRAINT FK_SGV_VENDAPROD_PROD FOREIGN KEY ( id_produto ) REFERENCES T_SGV_PRODUTO ( id_produto );
ALTER TABLE T_SGV_VENDA_PRODUTO ADD CONSTRAINT FK_SGV_VENDAPROD_VENDA FOREIGN KEY ( id_venda, cd_cliente ) REFERENCES T_SGV_VENDA ( id_venda, cd_cliente );
ALTER TABLE T_SGV_VENDA ADD CONSTRAINT FK_SGV_VENDA_CLIENTE FOREIGN KEY ( cd_cliente ) REFERENCES T_SGV_CLIENTE ( cd_cliente );
ALTER TABLE T_SGV_VIDEO ADD CONSTRAINT FK_SGV_VIDEO_CLASS FOREIGN KEY ( id_classificacao ) REFERENCES T_SGV_CLASSIFICACAO ( id_classificacao );
ALTER TABLE T_SGV_VIDEO ADD CONSTRAINT FK_SGV_VIDEO_PROD FOREIGN KEY ( id_produto ) REFERENCES T_SGV_PRODUTO ( id_produto );
ALTER TABLE T_SGV_VISUALIZACAO ADD CONSTRAINT FK_SGV_VISUAL_CLIENTE FOREIGN KEY ( cd_cliente ) REFERENCES T_SGV_CLIENTE ( cd_cliente );
ALTER TABLE T_SGV_VISUALIZACAO ADD CONSTRAINT FK_SGV_VISUAL_VIDEO FOREIGN KEY ( id_video, id_produto ) REFERENCES T_SGV_VIDEO ( id_video, id_produto );
ALTER TABLE T_SGV_PESSOA_FISICA ADD CONSTRAINT FK_SVG_PF_CLIENTE FOREIGN KEY ( cd_cliente ) REFERENCES T_SGV_CLIENTE ( cd_cliente );


-- Trigger para calcular a duração do chamado em horas
CREATE OR REPLACE FUNCTION calculate_duration() RETURNS TRIGGER AS $$
BEGIN
  IF NEW.dt_fechamento IS NOT NULL AND OLD.dt_fechamento IS NULL THEN
    NEW.vl_duracao_h := EXTRACT(EPOCH FROM (NEW.dt_fechamento - OLD.dt_abertura)) / 3600;
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_duration
BEFORE UPDATE ON T_SGV_CHAMADO
FOR EACH ROW
WHEN (OLD.dt_fechamento IS NULL AND NEW.dt_fechamento IS NOT NULL)
EXECUTE FUNCTION calculate_duration();

-- Trigger para impedir que um vídeo seja visualizado enquanto inativo
CREATE OR REPLACE FUNCTION check_t_sgv_video_st() RETURNS TRIGGER AS $$
BEGIN
  IF NOT EXISTS (SELECT 1 FROM T_SGV_VIDEO WHERE id_produto = NEW.id_produto AND id_video = NEW.id_video AND ST_VIDEO = 'A') THEN
    RAISE EXCEPTION 'The referenced T_SGV_VIDEO record has an ST_VIDEO value other than ''A''.';
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER t_sgv_visualizacao_check_st
BEFORE INSERT ON T_SGV_VISUALIZACAO
FOR EACH ROW
EXECUTE FUNCTION check_t_sgv_video_st();


-- SEQUENCES and IDENTITIES

DROP SEQUENCE IF EXISTS SEQ_SGV_CATEGORIA_ID;
DROP SEQUENCE IF EXISTS SEQ_SGV_CLASSIFICACAO_ID;
DROP SEQUENCE IF EXISTS SEQ_SGV_FUNCIONARIO_CD;
DROP SEQUENCE IF EXISTS SEQ_SGV_PESSOA_FISICA_ID;
DROP SEQUENCE IF EXISTS SEQ_SGV_PESSOA_JURIDICA_ID;
DROP SEQUENCE IF EXISTS SEQ_SGV_PRODUTO_ID;
DROP SEQUENCE IF EXISTS SEQ_SGV_VENDA_ID;
DROP SEQUENCE IF EXISTS SEQ_SGV_VIDEO_ID;
DROP SEQUENCE IF EXISTS SEQ_SGV_VISUALIZACAO_ID;

CREATE SEQUENCE SEQ_SGV_CATEGORIA_ID START 1;
CREATE SEQUENCE SEQ_SGV_CLASSIFICACAO_ID START 1;
CREATE SEQUENCE SEQ_SGV_FUNCIONARIO_CD START 1;
CREATE SEQUENCE SEQ_SGV_PESSOA_FISICA_ID START 1;
CREATE SEQUENCE SEQ_SGV_PESSOA_JURIDICA_ID START 1;
CREATE SEQUENCE SEQ_SGV_PRODUTO_ID START 1;
CREATE SEQUENCE SEQ_SGV_VENDA_ID START 1;
CREATE SEQUENCE SEQ_SGV_VIDEO_ID START 1;
CREATE SEQUENCE SEQ_SGV_VISUALIZACAO_ID START 1;

ALTER TABLE T_SGV_CATEGORIA ALTER COLUMN id_categoria SET DEFAULT nextval('SEQ_SGV_CATEGORIA_ID');
ALTER TABLE T_SGV_CLASSIFICACAO ALTER COLUMN id_classificacao SET DEFAULT nextval('SEQ_SGV_CLASSIFICACAO_ID');
ALTER TABLE T_SGV_FUNCIONARIO ALTER COLUMN cd_funcionario SET DEFAULT nextval('SEQ_SGV_FUNCIONARIO_CD');
ALTER TABLE T_SGV_PESSOA_FISICA ALTER COLUMN id_pf SET DEFAULT nextval('SEQ_SGV_PESSOA_FISICA_ID');
ALTER TABLE T_SGV_PESSOA_JURIDICA ALTER COLUMN id_pj SET DEFAULT nextval('SEQ_SGV_PESSOA_JURIDICA_ID');
ALTER TABLE T_SGV_PRODUTO ALTER COLUMN id_produto SET DEFAULT nextval('SEQ_SGV_PRODUTO_ID');
ALTER TABLE T_SGV_VENDA ALTER COLUMN id_venda SET DEFAULT nextval('SEQ_SGV_VENDA_ID');
ALTER TABLE T_SGV_VIDEO ALTER COLUMN id_video SET DEFAULT nextval('SEQ_SGV_VIDEO_ID');
ALTER TABLE T_SGV_VISUALIZACAO ALTER COLUMN id_visualizacao SET DEFAULT nextval('SEQ_SGV_VISUALIZACAO_ID');

ALTER TABLE T_SGV_CHAMADO ALTER COLUMN id_chamado ADD GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999);
